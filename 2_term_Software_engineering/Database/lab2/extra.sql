-- номер факультета, его наименование, количество студентов бакалавриата и магистров на нем (при помощи маски), квалификация факультета
SELECT
"Н_ПЛАНЫ"."ОТД_ИД" AS "Номер факультета",
"Н_ОТДЕЛЫ"."ИМЯ_В_ИМИН_ПАДЕЖЕ" AS "Наименование факультета",
COUNT(CASE WHEN "Н_КВАЛИФИКАЦИИ"."НАИМЕНОВАНИЕ" LIKE 'Бакалавр%' THEN 1 END) AS "Количество бакалавров",
COUNT(CASE WHEN "Н_КВАЛИФИКАЦИИ"."НАИМЕНОВАНИЕ" LIKE 'Магистр%' THEN 1 END) AS "Количество магистров",
"Н_КВАЛИФИКАЦИИ"."НАИМЕНОВАНИЕ" AS "Квалификация факультета"
FROM "Н_ПЛАНЫ"
JOIN "Н_ОТДЕЛЫ" ON "Н_ПЛАНЫ"."ОТД_ИД" = "Н_ОТДЕЛЫ"."ИД"
JOIN "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ" ON "Н_ПЛАНЫ"."НАПС_ИД" = "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"."ИД"
JOIN "Н_КВАЛИФИКАЦИИ" ON "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"."КВАЛ_ИД" = "Н_КВАЛИФИКАЦИИ"."ИД"
GROUP BY
"Н_ПЛАНЫ"."ОТД_ИД",
"Н_ОТДЕЛЫ"."ИМЯ_В_ИМИН_ПАДЕЖЕ",
"Н_КВАЛИФИКАЦИИ"."НАИМЕНОВАНИЕ"
HAVING
COUNT(CASE WHEN "Н_КВАЛИФИКАЦИИ"."НАИМЕНОВАНИЕ" LIKE 'Бакалавр%' THEN 1 END) +
COUNT(CASE WHEN "Н_КВАЛИФИКАЦИИ"."НАИМЕНОВАНИЕ" LIKE 'Магистр%' THEN 1 END) > 0;

-- вывести все группы КТУ, а также количество отличников и двоечников в них
SELECT "Н_УЧЕНИКИ"."ГРУППА",
       COUNT(CASE WHEN "Н_ВЕДОМОСТИ"."ОЦЕНКА" = '5' THEN 1 END) as "Отличники",
       COUNT(CASE WHEN "Н_ВЕДОМОСТИ"."ОЦЕНКА" = '2' THEN 1 END) as "Двоечники"
FROM "Н_УЧЕНИКИ"
JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ПЛАН_ИД"
JOIN "Н_ОТДЕЛЫ" ON "Н_ПЛАНЫ"."ОТД_ИД" = "Н_ОТДЕЛЫ"."ИД"
JOIN "Н_ВЕДОМОСТИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
WHERE "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'КТиУ'
GROUP BY "Н_УЧЕНИКИ"."ГРУППА";

-- определить список студентов, имеющих наибольший средний интервал между последовательными датами сдачи экзамена при помощи over partition be lead lag
SELECT "Н_ЛЮДИ"."ИД", AVG(EXTRACT(DAY FROM "interval") + 30 * DATE_PART('month', "interval") + 365 * DATE_PART('year', "interval")) as "avg_interval",
       ARRAY_AGG("Н_СЕССИЯ"."ДАТА" ORDER BY "Н_СЕССИЯ"."ДАТА") as "exam_dates"
FROM (
    SELECT
        "Н_СЕССИЯ"."ЧЛВК_ИД",
        "Н_СЕССИЯ"."ДАТА",
        LAG("Н_СЕССИЯ"."ДАТА") OVER (PARTITION BY "Н_СЕССИЯ"."ЧЛВК_ИД" ORDER BY "Н_СЕССИЯ"."ДАТА") as "prev_date",
        "Н_СЕССИЯ"."ДАТА" - LAG("Н_СЕССИЯ"."ДАТА") OVER (PARTITION BY "Н_СЕССИЯ"."ЧЛВК_ИД" ORDER BY "Н_СЕССИЯ"."ДАТА") as "interval"
    FROM
        "Н_СЕССИЯ"
    ) as "session_interval"
JOIN "Н_ЛЮДИ" ON "session_interval"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
JOIN "Н_СЕССИЯ" ON "session_interval"."ЧЛВК_ИД" = "Н_СЕССИЯ"."ЧЛВК_ИД"
WHERE "interval" IS NOT NULL
GROUP BY "Н_ЛЮДИ"."ИД"
ORDER BY "avg_interval" DESC
LIMIT 10;